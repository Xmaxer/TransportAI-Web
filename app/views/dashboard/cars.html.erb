<% content_for(:header) do %>
<%= stylesheet_link_tag    'dashboard/cars', media: 'all', 'data-turbolinks-track': 'reload' %>
<script src="https://www.gstatic.com/firebasejs/5.5.5/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/5.5.5/firebase-firestore.js"></script>
<% end %>
<div class="row">
  <div class="col-md-12">
    <div class="card ">
      <div class="card-header">
        <h4 class="card-title"> Car List</h4>
        <input type="text" id="myInput" class="form-control" onkeyup="myFunction()" placeholder="SEARCH" >
      </div>
      <div class="card-body">
        <div class="table-responsive" style="height:500px;overflow-x:hidden;">
          <table class="table tablesorter " id="myTable">
            <thead class=" text-primary">
              <tr>
                <th>
                  Car Icon
                </th>
                <th>
                  Name
                </th>
                <th>
                  Make
                </th>
                <th>
                  Model
                </th>
                <th>
                  Number Plate
                </th>
                <th>
                  Number of Seats
                </th>
              </tr>
              <tr>
                <%= form_for :car_details, url: dashboard_submit_car_path, remote:true do |f|%>
                <td>
                  <!--  <%= f.file_field :image, id: "filebutton", class: "input-file" %> -->
                </td>
                <td>
                  <%= f.text_field :name, class: "form-control", id: "name", placeholder: "Name", disabled:true %>
                </td>
                <td>
                  <%= f.text_field :make, class: "form-control", id: "make", placeholder: "Make", onchange: "update();", oninput: "update();" %>
                </td>
                <td>
                  <%= f.text_field :model, class: "form-control", id: "model", placeholder: "Model", onchange: "update();", oninput: "update();" %>
                </td>
                <td>
                  <%= f.text_field :number_plate, class: "form-control", id: "noPlate", placeholder: "Number Plate" %>
                </td>
                <td>
                  <%= f.text_field :seats, class: "form-control", id: "noOfSeats", placeholder: "Seats" %>
                </td>
                <td>
                  <%= f.submit "Add", class: "btn btn-default", name: "singlebutton", id: "addButton", data: { disable_with: false} %>
                </td>
                <% end %>
              </tr>

            </thead>
            <tbody>
              <% @data.each do |car| %>
              <tr>
                <td>
                  <div class="image-container">
                  <% if file_exists?(car.data[:image]) %>
                  <%= image_tag ENV['AWS_ENDPOINT'] + car.data[:image], class: "img-responsive img-fluid" %>
                  <% else %>
                  <%= image_tag ENV['AWS_ENDPOINT'] + 'default.jpg', class: "img-responsive img-fluid" %>
                  <% end %>
                </div>
                </td>
                <td>
                  <%= car.data[:make] + " " + car.data[:model] %>
                </td>
                <td>
                  <%= car.data[:make] %>
                </td>
                <td>
                  <%= car.data[:model] %>
                </td>
                <td>
                  <%= car.document_id %>
                </td>
                <td>
                  <%= car.data[:seats].to_s + "-seater" %>
                </td>
              </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-md-12">
    <div class="card card-plain">
      <div class="card-header">
        Google Maps
      </div>
      <div class="card-body">
        <div id="map" class="map"></div>
      </div>
    </div>
  </div>
</div>
</div>
<div class="clearfix"></div>
</div>
<script>
function myFunction() {
  // Declare variables
  var input, filter, table, tr, td, i;
  input = document.getElementById("myInput");
  filter = input.value.toUpperCase();
  table = document.getElementById("myTable");
  tr = document.querySelectorAll('tbody > tr');

  // Loop through all table rows, and hide those who don't match the search query
  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[1];
    if (td) {
      if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }
  }
  //tr[0].style.display = "";
}
</script>
<script>
function update() {
  var carMake = document.getElementById("make").value;
  var carModel = document.getElementById("model").value;
  var nameElement = document.getElementById("name");
  nameElement.value = carMake + " " + carModel;
}
function isBlank(str){
  return (!str || /^\s*$/.test(str));
}
$(document).ready(function() {
  $('#addButton').click(function() {
    if(!firebase.apps.length) {
      firebase.initializeApp({
        apiKey: '<%= ENV['GOOGLE_API_KEY'] %>',
        authDomain: '<%= ENV['FIRESTORE_PROJECT'] %>.firebaseapp.com',
        projectId: '<%= ENV['FIRESTORE_PROJECT'] %>'
      });
    }

    // Initialize Cloud Firestore through Firebase
    var db = firebase.firestore();

    // Disable deprecated features
    db.settings({
      timestampsInSnapshots: true
    });

    var colref = db.collection("cars");

    var table = document.getElementById("myTable");
    var button = document.getElementById("addButton");
    //var file = document.getElementById("filebutton").value;

    var carMake = document.getElementById("make").value;
    var carModel = document.getElementById("model").value;
    var carName = carMake + " " + carModel;
    var numberOfSeats = document.getElementById("noOfSeats").value;
    var numberPlate = document.getElementById("noPlate").value;

    if(isBlank(numberPlate) || isBlank(numberOfSeats) || isBlank(carModel) || isBlank(carMake))
    {
      alert("Must fill out all the fields");
      return;
    }
    colref.get().then(function(qs) {
      var exists = false;
      qs.forEach(function(doc) {
        if(doc.id.toLowerCase() == numberPlate.toLowerCase()) {
          exists = true;
          return;
        }
      });
      if(!exists) {
        var row = table.insertRow(2);
        var cell0 = row.insertCell(0);
        var cell1 = row.insertCell(1);
        var cell2 = row.insertCell(2);
        var cell3 = row.insertCell(3);
        var cell4 = row.insertCell(4);
        var cell5 = row.insertCell(5);
        var filename = (carMake + "_" + carModel + ".jpg").toLowerCase();
        cell0.innerHTML = "<img src='http://ardra.s3.amazonaws.com/public/cars/" + ((isBlank(filename)) ? "default.jpg" : filename) + "' class='img-responsive img-fluid'></img>";
        cell1.innerHTML = carName;
        cell2.innerHTML = carMake;
        cell3.innerHTML = carModel;
        cell4.innerHTML = numberPlate;
        cell5.innerHTML = numberOfSeats;
      }
      else {
        alert("Vehicle plate already exists");
      }
    });

  });
});

</script>
<script>
function initMap() {
  // The location of Uluru
  var uluru = {lat: 51.8987528, lng: -8.4706315};
  // The map, centered at Uluru
  var map = new google.maps.Map(
    document.getElementById('map'), {zoom: 12, center: uluru, gestureHandling: 'cooperative',
    styles: [
      {elementType: 'geometry', stylers: [{color: '#27293d'}]},
      {elementType: 'labels.text.stroke', stylers: [{color: '#242f3e'}]},
      {elementType: 'labels.text.fill', stylers: [{color: '#746855'}]},
      {
        featureType: 'administrative.locality',
        elementType: 'labels.text.fill',
        stylers: [{color: '#dbdcdf'}]
      },
      {
        featureType: 'poi',
        elementType: 'labels.text.fill',
        stylers: [{color: '#505066'}]
      },
      {
        featureType: 'poi.park',
        elementType: 'geometry',
        stylers: [{color: '#505066'}]
      },
      {
        featureType: 'poi.park',
        elementType: 'labels.text.fill',
        stylers: [{color: '#6b9a76'}]
      },
      {
        featureType: 'road',
        elementType: 'geometry',
        stylers: [{color: '#38414e'}]
      },
      {
        featureType: 'road',
        elementType: 'geometry.stroke',
        stylers: [{color: '#212a37'}]
      },
      {
        featureType: 'road',
        elementType: 'labels.text.fill',
        stylers: [{color: '#9ca5b3'}]
      },
      {
        featureType: 'road.highway',
        elementType: 'geometry',
        stylers: [{color: '#4c6aaa'}]
      },
      {
        featureType: 'road.highway',
        elementType: 'geometry.stroke',
        stylers: [{color: '#1f2835'}]
      },
      {
        featureType: 'road.highway',
        elementType: 'labels.text.fill',
        stylers: [{color: '#f3d19c'}]
      },
      {
        featureType: 'transit',
        elementType: 'geometry',
        stylers: [{color: '#505066'}]
      },
      {
        featureType: 'transit.station',
        elementType: 'labels.text.fill',
        stylers: [{color: '#d59563'}]
      },
      {
        featureType: 'water',
        elementType: 'geometry',
        stylers: [{color: '#17263c'}]
      },
      {
        featureType: 'water',
        elementType: 'labels.text.fill',
        stylers: [{color: '#515c6d'}]
      },
      {
        featureType: 'water',
        elementType: 'labels.text.stroke',
        stylers: [{color: '#17263c'}]
      }
    ]});

    if(!firebase.apps.length) {
      firebase.initializeApp({
        apiKey: '<%= ENV['GOOGLE_API_KEY'] %>',
        authDomain: '<%= ENV['FIRESTORE_PROJECT'] %>.firebaseapp.com',
        projectId: '<%= ENV['FIRESTORE_PROJECT'] %>'
      });
    }

    // Initialize Cloud Firestore through Firebase
    var db = firebase.firestore();

    // Disable deprecated features
    db.settings({
      timestampsInSnapshots: true
    });

    var markers = [];
    db.collection("cars").onSnapshot(function(ss) {
      ss.docChanges().forEach(function(change) {
        if(change.type == "modified" || change.type == "added"){
          var doc = change.doc.data();
          var markerName = change.doc.id;
          var latlng = {lat: doc.location.latitude, lng: doc.location.longitude};
          var i;
          var found = -1;
          for(i = 0; i < markers.length; i++)
          {
            if(markers[i].title == markerName) {
              markers[i].setPosition(latlng);
              found = i;
              break;
            }
          }

          if(found <= 0) {
            var marker = new google.maps.Marker({
              position: latlng,
              title: markerName,
              map: map
            });
            markers.push(marker);
          }
        }
      });
    });
  }
</script>
<script async defer
src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&callback=initMap">
</script>
